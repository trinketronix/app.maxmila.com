<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?=$pageTitle?></title>

    <!-- Bootstrap 5.1 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome CDN for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
    <!-- Vanilla Datepicker CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">

    <style>
        html, body {
            height: 100vh;
            overflow: hidden;
            background-color: #f0f2f5;
            font-family: 'Segoe UI', 'Roboto', sans-serif;
        }
        .page-container {
            display: flex;
            flex-direction: column;
            height: 100vh;
            max-width: 500px;
            margin: 0 auto;
            background-color: #ffffff;
            border-left: 1px solid #dcdcdc;
            border-right: 1px solid #dcdcdc;
            position: relative;
        }

        /* --- Header & Controls (Fixed) --- */
        .header { display: flex; justify-content: space-between; align-items: center; padding: 1rem; position: relative; flex-shrink: 0; }
        .back-button { text-decoration: none; color: #333; font-weight: 500; }
        .header-title { font-size: 2.2rem; font-weight: bold; margin: 0; position: absolute; left: 50%; transform: translateX(-50%); }
        .profile { text-align: center; }
        .profile-icon { font-size: 1.5rem; border: 2px solid #000; border-radius: 50%; width: 45px; height: 45px; display: flex; align-items: center; justify-content: center; margin: 0 auto; overflow: hidden; }
        .profile-icon img { width: 100%; height: 100%; object-fit: cover; }
        .profile-username { font-size: 0.8rem; color: #555; margin-top: 4px; }
        .controls-section { padding: 1rem; background-color: #f8f9fa; border-bottom: 1px solid #e0e0e0; flex-shrink: 0; }
        .search-bar .form-control, .search-bar .btn { border-radius: 8px; border: 2px solid #000; }
        .filter-group { border: 2px solid #000; border-radius: 10px; padding: 0.5rem; }
        .filter-buttons { display: flex; overflow-x: auto; gap: 0.5rem; }
        .filter-btn { border: 2px solid #000; border-radius: 8px; background-color: #fff; color: #000; font-weight: 500; white-space: nowrap; }
        .filter-btn.active { background-color: #000; color: #fff; }
        .filter-buttons::-webkit-scrollbar { display: none; }

        /* --- Visit List --- */
        .visit-list-container {
            flex-grow: 1; overflow-y: auto; padding: 1rem; padding-bottom: 120px;
        }
        .visit-card {
            display: grid; grid-template-columns: 1fr auto 1fr; align-items: center;
            border: 2px solid #000; border-radius: 15px; padding: 1rem; margin-bottom: 1rem;
            text-decoration: none; color: inherit; transition: background-color 0.2s;
        }
        .visit-card:hover { background-color: #f1f1f1; }
        .visit-person { text-align: center; }
        .visit-person-avatar { width: 60px; height: 60px; border: 3px solid #000; border-radius: 50%; overflow: hidden; margin: 0 auto 0.5rem auto; display:flex; align-items:center; justify-content:center; }
        .visit-person-avatar img { width: 100%; height: 100%; object-fit: cover; }
        .visit-person-name { font-weight: 500; }
        .visit-details { text-align: center; }
        .visit-date { font-weight: bold; font-size: 1.1rem; }
        .visit-relative-time, .visit-progress { color: #555; }
        .visit-progress-canceled { color: #dc3545; font-weight: bold; }

        /* --- Offcanvas & Tabs --- */
        .fab { position: absolute; bottom: 20px; left: 50%; transform: translateX(-50%); width: 90px; height: 90px; border-radius: 50%; background-color: #e0e0e0; border: 3px solid #000; display: flex; flex-direction: column; align-items: center; justify-content: center; font-weight: 500; text-decoration: none; color: #000; z-index: 1040; }
        #assignVisitOffcanvas .nav-tabs .nav-link { border: 2px solid #000 !important; border-bottom: 0 !important; color: #000; margin-right: 2px; }
        #assignVisitOffcanvas .nav-tabs .nav-link.active { background-color: #0d6efd; color: #fff; border-color: #0d6efd !important;}
        #assignVisitOffcanvas .nav-tabs .nav-link.disabled { color: #aaa; border-color: #aaa !important; background-color: #f8f9fa; }
        .tab-pane { padding-top: 1rem; }
        .selection-list { max-height: 300px; overflow-y: auto; }
        .selection-item { display: flex; align-items: center; gap: 1rem; border: 2px solid #ccc; border-radius: 15px; padding: 0.75rem; margin-bottom: 0.5rem; cursor: pointer; }
        .selection-item.selected { border-color: #0d6efd; background-color: #eef5ff; }
        .item-avatar { width: 45px; height: 45px; }
        #create-visit-btn { border: 2px solid #000; font-weight: bold; }

        @media (min-width: 768px) { .page-container { max-width: 720px; } }
    </style>
</head>
<body onload="initializePage()">

<div id="alert-container" style="position: fixed; top: 10px; left: 50%; transform: translateX(-50%); z-index: 2000; width: 90%; max-width: 480px;"></div>

<div class="page-container">
    <header class="header">
        <a href="/dashboard/admin" class="back-button"><i class="fas fa-chevron-left"></i> Exit</a>
        <h1 class="header-title">Visits</h1>
        <div class="profile">
            <div class="profile-icon"><img src="<?=$photo?>" alt="avatar"></div>
            <span class="profile-username"><?=$fullname?></span>
        </div>
    </header>
    <section class="controls-section">
        <div class="input-group search-bar mb-3">
            <input type="text" id="search-input-main" class="form-control" placeholder="Search by name...">
            <button class="btn btn-dark" type="button" id="main-search-btn">Search</button>
        </div>
        <div class="filter-group mb-2">
            <div class="filter-buttons"><small class="align-self-center me-2">Status:</small>
                <button class="btn filter-btn active" data-filter-type="recordStatus" data-filter-value="all">All</button>
                <button class="btn filter-btn" data-filter-type="recordStatus" data-filter-value="1">Visible</button>
                <button class="btn filter-btn" data-filter-type="recordStatus" data-filter-value="2">Archived</button>
                <button class="btn filter-btn" data-filter-type="recordStatus" data-filter-value="3">Deleted</button>
            </div>
        </div>
        <div class="filter-group">
            <div class="filter-buttons"><small class="align-self-center me-2">Progress:</small>
                <button class="btn filter-btn active" data-filter-type="visitProgress" data-filter-value="all">All</button>
                <button class="btn filter-btn" data-filter-type="visitProgress" data-filter-value="0">Scheduled</button>
                <button class="btn filter-btn" data-filter-type="visitProgress" data-filter-value="1">Check-in</button>
                <button class="btn filter-btn" data-filter-type="visitProgress" data-filter-value="2">Check-out</button>
                <button class="btn filter-btn" data-filter-type="visitProgress" data-filter-value="3">Approved</button>
                <button class="btn filter-btn" data-filter-type="visitProgress" data-filter-value="-1">Canceled</button>
            </div>
        </div>
    </section>
    <main class="visit-list-container">
        <div id="visit-list"><div class="text-center p-5"><div class="spinner-border"></div></div></div>
    </main>
</div>
<a href="#" class="fab" id="add-visit-btn"><div class="plus-icon">+</div><div>Visit</div></a>
<div class="offcanvas offcanvas-bottom h-100" tabindex="-1" id="assignVisitOffcanvas">
    <div class="offcanvas-header"><h5 class="offcanvas-title w-100 text-center">Select</h5><button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"></button></div>
    <div class="offcanvas-body d-flex flex-column">
        <ul class="nav nav-tabs" id="visit-tabs" role="tablist">
            <li class="nav-item" role="presentation"><button class="nav-link active" id="caregiver-tab-btn" data-bs-toggle="tab" data-bs-target="#caregiver-tab" type="button">Caregiver</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link disabled" id="patient-tab-btn" data-bs-toggle="tab" data-bs-target="#patient-tab" type="button">Patient</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link disabled" id="address-tab-btn" data-bs-toggle="tab" data-bs-target="#address-tab" type="button">Address</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link" id="date-tab-btn" data-bs-toggle="tab" data-bs-target="#date-tab" type="button">Date</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link" id="start-tab-btn" data-bs-toggle="tab" data-bs-target="#start-tab" type="button">Start</button></li>
            <li class="nav-item" role="presentation"><button class="nav-link" id="end-tab-btn" data-bs-toggle="tab" data-bs-target="#end-tab" type="button">End</button></li>
        </ul>
        <div class="tab-content flex-grow-1" id="visit-tabs-content">
            <div class="tab-pane fade show active" id="caregiver-tab"><div class="input-group search-bar mb-2"><input type="text" class="form-control" placeholder="Search caregiver..."></div><div class="selection-list" id="caregiver-selection-list"></div></div>
            <div class="tab-pane fade" id="patient-tab"><div id="patient-selection-placeholder" class="text-center text-muted mt-5">Please select a caregiver first.</div><div id="patient-selection-content" style="display:none;"><div class="input-group search-bar mb-2"><input type="text" class="form-control" placeholder="Search patient..."></div><div class="selection-list" id="patient-selection-list"></div></div></div>
            <div class="tab-pane fade" id="address-tab"><div id="address-selection-placeholder" class="text-center text-muted mt-5">Please select a patient first.</div><div id="address-selection-content" style="display:none;"><div class="input-group search-bar mb-2"><input type="text" class="form-control" placeholder="Search address..."></div><div class="selection-list" id="address-selection-list"></div></div></div>
            <div class="tab-pane fade" id="date-tab"><div id="datepicker-container"></div></div>
            <div class="tab-pane fade" id="start-tab"><div class="time-picker-container" id="start-time-picker"></div></div>
            <div class="tab-pane fade" id="end-tab"><div class="time-picker-container" id="end-time-picker"></div></div>
        </div>
        <button type="button" class="btn btn-primary mt-3" id="create-visit-btn" style="display:none;">Create Visit</button>
    </div>
</div>
<div class="modal fade" id="visitConfirmationModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content"><div class="modal-header"><h5 class="modal-title">Confirm Visit</h5><button type="button" class="btn-close" data-bs-dismiss="modal"></button></div><div class="modal-body" id="visit-confirmation-text"></div><div class="modal-footer"><button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button><button type="button" class="btn btn-primary" id="confirm-create-visit-btn">OK</button></div></div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>

<script>
    const baseUrl = '<?=$baseUrl?>';
    const authToken = '<?=$authToken?>';
    const newVisitState = { caregiverId: null, caregiverFullname: null, patientId: null, patientFullname: null, addressId: null, address: null, visitDate: null, startTime: null, endTime: null };
    let allVisits = [];
    let visitConfirmationModal, assignVisitOffcanvas;

    // --- HELPER & RENDER FUNCTIONS ---
    const showAlert = (message, type = 'success') => {
        $('#alert-container').html(`<div class="alert alert-${type} alert-dismissible fade show" role="alert">${message}<button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>`).delay(4000).fadeOut();
    };

    const getFormattedDate = (dateStr) => {
        const date = new Date(dateStr);
        return date.toLocaleDateString('en-US', { month: 'long', day: 'numeric' }) + ', ' + date.toLocaleTimeString('en-US', { hour: 'numeric', minute: '2-digit', hour12: true });
    };

    const getRelativeTime = (dateStr) => {
        const now = new Date();
        const visitDate = new Date(dateStr);
        now.setHours(0, 0, 0, 0);
        visitDate.setHours(0, 0, 0, 0);
        const diffTime = visitDate - now;
        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
        if (diffDays < 0) return "Past visit";
        if (diffDays === 0) return "Today";
        if (diffDays === 1) return "Tomorrow";
        return `In ${diffDays} days`;
    };

    const getProgressText = (progressCode) => {
        const map = { '-1': "Canceled", '0': "Scheduled", '1': "Check-in", '2': "Check-out", '3': "Approved" };
        return map[progressCode] || 'Unknown';
    };

    const renderVisitList = (visits) => {
        const listContainer = $('#visit-list');
        listContainer.empty();
        if (!visits || visits.length === 0) {
            listContainer.html('<p class="text-center text-muted mt-4">No visits found matching criteria.</p>');
            return;
        }
        visits.forEach(visit => {
            const caregiverName = `${visit.user.firstname} ${visit.user.lastname}`;
            const patientName = `${visit.patient.firstname} ${visit.patient.lastname}`;
            const caregiverPhoto = (visit.user.photo && !visit.user.photo.endsWith('default.jpg')) ? (baseUrl + visit.user.photo) : 'https://via.placeholder.com/60';
            const patientPhoto = (visit.patient.photo && !visit.patient.photo.endsWith('default.jpg')) ? (baseUrl + visit.patient.photo) : 'https://via.placeholder.com/60';
            const progressText = getProgressText(visit.progress);

            const cardHtml = `
                <a href="/visit/detail/${visit.id}" class="visit-card" data-record-status="${visit.status}" data-visit-progress="${visit.progress}">
                    <div class="visit-person">
                        <div class="visit-person-avatar"><img src="${caregiverPhoto}" alt="Caregiver"></div>
                        <div class="visit-person-name">${caregiverName}</div>
                    </div>
                    <div class="visit-details">
                        <div class="visit-date">${getFormattedDate(visit.start_time)}</div>
                        <div class="visit-relative-time">${getRelativeTime(visit.start_time)}</div>
                        <div class="visit-progress ${progressText === 'Canceled' ? 'visit-progress-canceled' : ''}">${progressText}</div>
                    </div>
                    <div class="visit-person">
                        <div class="visit-person-avatar"><img src="${patientPhoto}" alt="Patient"></div>
                        <div class="visit-person-name">${patientName}</div>
                    </div>
                </a>`;
            listContainer.append(cardHtml);
        });
    };

    const renderSelectionList = (items, containerId, type) => {
        const listContainer = $(`#${containerId}`); listContainer.empty();
        if (!items || items.length === 0) { listContainer.html(`<p class="text-center text-muted mt-3">No ${type}s found.</p>`); return; }
        items.forEach(item => {
            let id, name, photo, iconClass = 'fa-user';
            if(type === 'caregiver' || type === 'patient') { id = item.id; name = `${item.firstname || ''} ${item.lastname || ''}`.trim(); photo = (item.photo && !item.photo.endsWith('default.jpg')) ? (baseUrl + item.photo) : 'https://via.placeholder.com/45'; }
            else { id = item.id; name = `${item.address}, ${item.city}, ${item.state} ${item.zipcode}`; photo = null; iconClass = item.type === 'Apartment' ? 'fa-building' : 'fa-house'; }
            const itemHtml = `<div class="selection-item" data-id="${id}" data-name="${name}"><div class="item-avatar selection-item-avatar">${photo ? `<img src="${photo}" class="rounded-circle w-100 h-100" style="object-fit:cover;" alt="Avatar">` : `<i class="fa-solid ${iconClass} fs-3"></i>`}</div><div>${name}</div></div>`;
            listContainer.append(itemHtml);
        });
    };

    const checkFormCompleteness = () => {
        const { caregiverId, patientId, addressId, visitDate, startTime, endTime } = newVisitState;
        if (caregiverId && patientId && addressId && visitDate && startTime && endTime) { $('#create-visit-btn').fadeIn(); } else { $('#create-visit-btn').fadeOut(); }
    };

    // --- API CALLS ---
    const fetchAllVisits = () => {
        $('#visit-list').html('<div class="text-center p-5"><div class="spinner-border"></div></div>');
        $.ajax({
            url: `${baseUrl}/visits`,
            headers: { 'Authorization': authToken },
            success: (response) => {
                if (response.status === 'success' && response.data.visits) {
                    allVisits = response.data.visits;
                    applyFilters(); // Apply default filters on initial load
                } else { throw new Error('Failed to parse visits'); }
            },
            error: () => showAlert('Error fetching visit list.', 'danger')
        });
    };
    const fetchCaregivers = () => $.ajax({ url: `${baseUrl}/accounts`, headers: { 'Authorization': authToken } });
    const fetchAssignedPatients = (caregiverId) => $.ajax({ url: `${baseUrl}/assigned/patients/${caregiverId}`, headers: { 'Authorization': authToken } });
    const fetchPatientAddresses = (patientId) => $.ajax({ url: `${baseUrl}/address/person/${patientId}/1`, headers: { 'Authorization': authToken } });

    // --- NEW FILTERING LOGIC ---
    function applyFilters() {
        const recordStatus = $('button[data-filter-type="recordStatus"].active').data('filter-value');
        const visitProgress = $('button[data-filter-type="visitProgress"].active').data('filter-value');
        const searchTerm = $('#search-input-main').val().toLowerCase();

        const filteredVisits = allVisits.filter(visit => {
            const recordStatusMatch = (recordStatus === 'all' || visit.status == recordStatus);
            const visitProgressMatch = (visitProgress === 'all' || visit.progress == visitProgress);
            const caregiverName = `${visit.user.firstname} ${visit.user.lastname}`.toLowerCase();
            const patientName = `${visit.patient.firstname} ${visit.patient.lastname}`.toLowerCase();
            const searchMatch = (searchTerm === '' || caregiverName.includes(searchTerm) || patientName.includes(searchTerm));

            return recordStatusMatch && visitProgressMatch && searchMatch;
        });

        renderVisitList(filteredVisits);
    }

    // --- INITIALIZATION ---
    function initializePage() {
        visitConfirmationModal = new bootstrap.Modal(document.getElementById('visitConfirmationModal'));
        assignVisitOffcanvas = new bootstrap.Offcanvas(document.getElementById('assignVisitOffcanvas'));

        fetchAllVisits();

        const datepickerElem = document.getElementById('datepicker-container');
        const datepicker = new Datepicker(datepickerElem, { format: 'yyyy-mm-dd', autohide: true, todayHighlight: true });
        datepickerElem.addEventListener('changeDate', function(e) { newVisitState.visitDate = e.detail.date; checkFormCompleteness(); });

        $('#start-time-picker').html('<p class="text-muted">Start Time Picker UI</p><button class="btn btn-sm btn-info" id="sim-start">Set 9:00 AM</button>');
        $('#end-time-picker').html('<p class="text-muted">End Time Picker UI</p><button class="btn btn-sm btn-info" id="sim-end">Set 3:00 PM</button>');
        $('#sim-start').on('click', () => { newVisitState.startTime = {h:9, m:0}; checkFormCompleteness(); showAlert('Start time set to 9:00 AM'); });
        $('#sim-end').on('click', () => { newVisitState.endTime = {h:15, m:0}; checkFormCompleteness(); showAlert('End time set to 3:00 PM'); });

        $('#add-visit-btn').on('click', (e) => { e.preventDefault(); fetchCaregivers().done(res => renderSelectionList(res.data.users, 'caregiver-selection-list', 'caregiver')); assignVisitOffcanvas.show(); });
        $('#caregiver-selection-list').on('click', '.selection-item', function() { /* ... unchanged ... */ });
        $('#patient-selection-list').on('click', '.selection-item', function() { /* ... unchanged ... */ });
        $('#address-selection-list').on('click', '.selection-item', function() { /* ... unchanged ... */ });
        $('#create-visit-btn').on('click', function() { /* ... unchanged ... */ });
        $('#confirm-create-visit-btn').on('click', function() { /* ... unchanged, but now calls fetchAllVisits() on success ... */ });

        // --- NEW Filter Event Listeners ---
        $('.filter-btn').on('click', function() {
            const type = $(this).data('filter-type');
            $(`button[data-filter-type="${type}"]`).removeClass('active');
            $(this).addClass('active');
            applyFilters();
        });
        $('#main-search-btn, #search-input-main').on('keyup', applyFilters);
    }
</script>
</body>
</html>