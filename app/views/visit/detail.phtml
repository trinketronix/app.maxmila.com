<script>
    const visitId = <?=$visitId?>;
    const baseUrl = '<?=$baseUrl?>';
    const authToken = '<?=$authToken?>';
    let currentVisitData = {};

    // Declare component variables in the global scope
    let progressModal, statusModal, confirmAddressModal, addressOffcanvas;

    // --- HELPER FUNCTIONS (No changes here) ---
    const showAlert = (message, type = 'success') => { $('#alert-container').html(`<div class="alert alert-${type} alert-dismissible fade show" role="alert">${message}<button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>`).delay(4000).fadeOut(); };
    const getProgressText = (p) => ({ '-1': "Canceled", '0': "Scheduled", '1': "Check-in", '2': "Check-out", '3': "Approved" }[p] || 'Unknown');
    const getFormattedDateTime = (dateStr) => { const d = new Date(dateStr); return d.toLocaleString('en-US', { month: 'long', day: 'numeric', year: 'numeric', hour: 'numeric', minute: '2-digit', hour12: true }); };
    const getRelativeTime = (dateStr) => { const n=new Date(),v=new Date(dateStr);n.setHours(0,0,0,0);v.setHours(0,0,0,0);const d=Math.ceil((v-n)/(1e3*60*60*24));if(d<0)return"Past visit";if(d===0)return"Today";if(d===1)return"Tomorrow";return`In ${d} days`; };
    const toLocalISOString = (date) => { const z = n => (n<10?'0':'')+n; const off = date.getTimezoneOffset(); const absoff = Math.abs(off); return date.getFullYear()+'-'+z(date.getMonth()+1)+'-'+z(date.getDate())+'T'+z(date.getHours())+':'+z(date.getMinutes()); };

    // --- RENDER FUNCTIONS (No changes here) ---
    function renderVisitDetails(data) {
        if (!data || !data.user || !data.patient) { showAlert('Incomplete visit data received.', 'danger'); return; }
        $('#visit-progress-text').text(getProgressText(data.progress));
        $('#visit-date-text').text(new Date(data.start_time).toLocaleDateString('en-US', { month: 'long', day: 'numeric' }));
        $('#visit-duration').text(`${Math.floor(data.duration_minutes / 60)} hrs total`);
        $('#visit-relative-time').text(getRelativeTime(data.start_time));
        $('#caregiver-avatar').attr('src', data.user.photo ? baseUrl + data.user.photo : 'https://via.placeholder.com/70');
        $('#caregiver-name').text(`${data.user.firstname} ${data.user.lastname}`);
        $('#patient-avatar').attr('src', data.patient.photo ? baseUrl + data.patient.photo : 'https://via.placeholder.com/70');
        $('#patient-name').text(`${data.patient.firstname} ${data.patient.lastname}`);

        if (data.address) {
            $('#address-text').html(`${data.address.address}<br>${data.address.city}, ${data.address.state} ${data.address.zipcode}`);
            $('#address-icon').attr('class', data.address.type === 'Apartment' ? 'fa-solid fa-building' : 'fa-solid fa-house');
        }

        const details = ['start_time', 'scheduled_by', 'checkin_by', 'checkout_by', 'canceled_by', 'note'];
        details.forEach(key => {
            const el = $(`#${key}-item`);
            const viewEl = $(`#${key}-view`);
            if (data[key]) {
                const value = (key.endsWith('_by')) ? data[key].fullname : (key.includes('time') ? getFormattedDateTime(data[key]) : data[key]);
                viewEl.text(value);
                el.show();
            } else {
                el.hide();
            }
        });
        $('#duration-view').text(`${Math.floor(data.duration_minutes / 60)} Hours`);

        $('#visit-content-placeholder').hide();
        $('#visit-content').show();
    }

    // --- API CALLS (No changes here) ---
    function fetchVisitDetails() {
        $.ajax({ url: `${baseUrl}/visit/${visitId}`, headers: { 'Authorization': authToken },
            success: (res) => { if (res.status === 'success') { currentVisitData = res.data; renderVisitDetails(currentVisitData); } },
            error: () => showAlert('Failed to load visit details.', 'danger')
        });
    }
    function updateVisit(payload) {
        $.ajax({ url: `${baseUrl}/visit/${visitId}`, type: 'PUT', headers: { 'Authorization': authToken, 'Content-Type': 'application/json' }, data: JSON.stringify(payload),
            success: (res) => { showAlert(res.message || 'Visit updated successfully!', 'success'); fetchVisitDetails(); },
            error: (xhr) => showAlert(xhr.responseJSON?.message || 'Failed to update visit.', 'danger')
        });
    }

    // --- UI MODE MANAGEMENT (No changes here) ---
    function setMode(mode) {
        const container = $('#page-container');
        if (mode === 'edit') {
            $('#start_time-edit').val(toLocalISOString(new Date(currentVisitData.start_time)));
            $('#total_hours-edit').val(Math.floor(currentVisitData.duration_minutes / 60)); // Use Math.floor for whole numbers
            $('#note-edit').val(currentVisitData.note || '');
            container.removeClass('view-mode').addClass('edit-mode');
        } else {
            container.removeClass('edit-mode').addClass('view-mode');
        }
    }

    // --- MAIN INITIALIZATION & EVENT LISTENERS ---
    // *** THE FIX: Wrap initialization in $(document).ready() ***
    $(document).ready(function() {

        // Initialize Bootstrap components here, AFTER the DOM is ready.
        progressModal = new bootstrap.Modal(document.getElementById('progressModal'));
        statusModal = new bootstrap.Modal(document.getElementById('statusModal'));
        confirmAddressModal = new bootstrap.Modal(document.getElementById('confirmAddressModal'));
        addressOffcanvas = new bootstrap.Offcanvas(document.getElementById('addressOffcanvas'));

        // Main action buttons
        $('#edit-btn').on('click', () => setMode('edit'));
        $('#back-button').on('click', (e) => { e.preventDefault(); if ($('#page-container').hasClass('edit-mode')) setMode('view'); else window.history.back(); });

        $('#save-btn').on('click', () => {
            const totalHours = parseInt($('#total_hours-edit').val());
            if (isNaN(totalHours) || totalHours <= 0) {
                showAlert('Total Hours must be a positive number.', 'warning');
                return;
            }
            const payload = {
                start_time: $('#start_time-edit').val(),
                total_hours: totalHours,
                note: $('#note-edit').val()
            };
            updateVisit(payload);
            setMode('view');
        });

        // Progress & Status Modals
        $('#progress-btn').on('click', () => progressModal.show());
        $('#status-btn').on('click', () => statusModal.show());

        $('#progressModal button[data-progress]').on('click', function() {
            const progress = $(this).data('progress');
            if (progress === -1) {
                $('#cancel-note-group').show();
            } else {
                updateVisit({ progress: progress });
                progressModal.hide();
            }
        });

        $('#confirm-cancel-btn').on('click', function() {
            const note = $('#cancel-note').val();
            if (!note.trim()) { showAlert('Cancellation note is required.', 'warning'); return; }
            updateVisit({ progress: -1, note: note });
            progressModal.hide();
            $('#cancel-note').val('');
            $('#cancel-note-group').hide();
        });

        $('#statusModal button[data-status]').on('click', function() {
            updateVisit({ status: $(this).data('status') });
            statusModal.hide();
        });

        // Address change workflow
        $('#address-box').on('click', () => { if ($('#page-container').hasClass('edit-mode')) confirmAddressModal.show(); });

        $('#confirm-address-yes').on('click', () => {
            confirmAddressModal.hide();
            $.ajax({
                url: `${baseUrl}/address/person/${currentVisitData.patient_id}/1`,
                headers: { 'Authorization': authToken },
                success: (res) => {
                    const list = $('#address-selection-list');
                    list.empty();
                    if(res.data && res.data.length > 0) {
                        res.data.forEach(addr => list.append(`<div class="selection-item" data-id="${addr.id}">${addr.address}, ${addr.city}</div>`));
                    } else {
                        list.html('<p class="text-center text-muted">No other addresses found for this patient.</p>');
                    }
                    addressOffcanvas.show();
                },
                error: () => showAlert('Could not fetch addresses.', 'danger')
            });
        });

        $('#address-selection-list').on('click', '.selection-item', function() {
            updateVisit({ address_id: $(this).data('id') });
            addressOffcanvas.hide();
        });

    }); // End of $(document).ready()

    // This function is called by the body's onload attribute.
    // It's safe to keep it here because the document ready block will have already run.
    function initializePage() {
        fetchVisitDetails();
    }
</script>
</body>
</html>